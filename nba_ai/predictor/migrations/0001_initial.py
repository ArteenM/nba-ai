# Generated by Django 5.2.6 on 2025-10-04 20:45

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=9, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('abbreviation', models.CharField(max_length=5, unique=True)),
                ('city', models.CharField(max_length=50)),
                ('conference', models.CharField(choices=[('East', 'Eastern'), ('West', 'Western')], max_length=10)),
                ('division', models.CharField(max_length=20)),
                ('nba_team_id', models.IntegerField(unique=True)),
                ('founded_year', models.IntegerField(blank=True, null=True)),
                ('primary_color', models.CharField(default='#000000', max_length=7)),
                ('secondary_color', models.CharField(default='#FFFFFF', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PredictionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('version', models.CharField(max_length=20)),
                ('algorithm', models.CharField(max_length=50)),
                ('model_file_path', models.CharField(max_length=255)),
                ('accuracy', models.FloatField(default=0.0)),
                ('precision', models.FloatField(default=0.0)),
                ('recall', models.FloatField(default=0.0)),
                ('f1_score', models.FloatField(default=0.0)),
                ('training_data_start', models.DateField()),
                ('training_data_end', models.DateField()),
                ('features_used', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nba_game_id', models.CharField(max_length=20, unique=True)),
                ('game_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('live', 'Live'), ('finished', 'Finished'), ('postponed', 'Postponed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=10)),
                ('home_score', models.IntegerField(blank=True, null=True)),
                ('away_score', models.IntegerField(blank=True, null=True)),
                ('attendance', models.IntegerField(blank=True, null=True)),
                ('playoff_game', models.BooleanField(default=False)),
                ('game_type', models.CharField(default='Regular', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='predictor.season')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='predictor.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='predictor.team')),
            ],
            options={
                'ordering': ['-game_date'],
                'unique_together': {('home_team', 'away_team', 'game_date')},
            },
        ),
        migrations.CreateModel(
            name='GamePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_win_probability', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('away_win_probability', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('confidence_score', models.FloatField(default=0.0)),
                ('predicted_home_score', models.FloatField(blank=True, null=True)),
                ('predicted_away_score', models.FloatField(blank=True, null=True)),
                ('predicted_total_points', models.FloatField(blank=True, null=True)),
                ('model_version', models.CharField(default='v1.0', max_length=50)),
                ('features_used', models.JSONField(default=list)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('game', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prediction', to='predictor.game')),
                ('predicted_winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicted_wins', to='predictor.team')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games_played', models.IntegerField(default=0)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('win_percentage', models.FloatField(default=0.0)),
                ('points_per_game', models.FloatField(default=0.0)),
                ('field_goal_percentage', models.FloatField(default=0.0)),
                ('three_point_percentage', models.FloatField(default=0.0)),
                ('free_throw_percentage', models.FloatField(default=0.0)),
                ('rebounds_per_game', models.FloatField(default=0.0)),
                ('assists_per_game', models.FloatField(default=0.0)),
                ('turnovers_per_game', models.FloatField(default=0.0)),
                ('opponent_points_per_game', models.FloatField(default=0.0)),
                ('opponent_field_goal_percentage', models.FloatField(default=0.0)),
                ('steals_per_game', models.FloatField(default=0.0)),
                ('blocks_per_game', models.FloatField(default=0.0)),
                ('offensive_rating', models.FloatField(default=0.0)),
                ('defensive_rating', models.FloatField(default=0.0)),
                ('net_rating', models.FloatField(default=0.0)),
                ('pace', models.FloatField(default=0.0)),
                ('home_wins', models.IntegerField(default=0)),
                ('home_losses', models.IntegerField(default=0)),
                ('away_wins', models.IntegerField(default=0)),
                ('away_losses', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_stats', to='predictor.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_stats', to='predictor.team')),
            ],
            options={
                'ordering': ['-season__year', '-win_percentage'],
                'unique_together': {('team', 'season')},
            },
        ),
    ]
